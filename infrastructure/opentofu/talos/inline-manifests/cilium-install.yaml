---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-install
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: cilium-install
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-install
  namespace: kube-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cilium-install
  namespace: kube-system
spec:
  backoffLimit: 10
  template:
    metadata:
      labels:
        app: cilium-install
    spec:
      restartPolicy: OnFailure
      tolerations:
        - operator: Exists
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      serviceAccountName: cilium-install
      hostNetwork: true
      containers:
        - name: cilium-install
          image: quay.io/cilium/cilium-cli:v0.18.7
          env:
            - name: KUBERNETES_SERVICE_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          volumeMounts:
            - name: values
              mountPath: /root/app/values.yaml
              subPath: values.yaml
          command:
            - sh
            - -c
            - |
              set -e
              echo "Waiting for Gateway API CRDs to be available..."
              
              # Wait up to 5 minutes for Gateway API CRDs
              timeout=300
              elapsed=0
              while [ $elapsed -lt $timeout ]; do
                if kubectl get crd gatewayclasses.gateway.networking.k8s.io 2>/dev/null && \
                   kubectl get crd gateways.gateway.networking.k8s.io 2>/dev/null && \
                   kubectl get crd httproutes.gateway.networking.k8s.io 2>/dev/null; then
                  echo "✓ Gateway API CRDs are available"
                  break
                fi
                echo "Waiting for Gateway API CRDs... ($elapsed/$timeout seconds)"
                sleep 5
                elapsed=$((elapsed + 5))
              done
              
              if [ $elapsed -ge $timeout ]; then
                echo "Warning: Gateway API CRDs not found after $timeout seconds, continuing anyway..."
              fi
              
              echo "Installing Cilium..."
              cilium install \
                --version=v1.18.2 \
                --set kubeProxyReplacement=true \
                --values /root/app/values.yaml
              
              echo "✓ Cilium installation complete"
      volumes:
        - name: values
          configMap:
            name: cilium-values
