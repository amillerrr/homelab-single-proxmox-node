# Default deny all ingress traffic
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: microservices-demo
spec:
  endpointSelector: {}
  ingress:
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: microservices-demo

---

# Allow frontend to access API
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: frontend-to-api
  namespace: microservices-demo
spec:
  endpointSelector:
    matchLabels:
      app: api-service
  ingress:
  - fromEndpoints:
    - matchLabels:
        app: frontend
    toPorts:
    - ports:
      - port: "8080"
        protocol: TCP
      rules:
        http:
        - method: "GET"
          path: "/api/.*"
        - method: "POST"
          path: "/api/.*"
        - method: "PUT"
          path: "/api/.*"
        - method: "DELETE"
          path: "/api/.*"

---

# Allow API to access database
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: api-to-database
  namespace: microservices-demo
spec:
  endpointSelector:
    matchLabels:
      app: postgres
  ingress:
  - fromEndpoints:
    - matchLabels:
        app: api-service
    toPorts:
    - ports:
      - port: "5432"
        protocol: TCP

---

# Allow API to access Redis
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: api-to-redis
  namespace: microservices-demo
spec:
  endpointSelector:
    matchLabels:
      app: redis
  ingress:
  - fromEndpoints:
    - matchLabels:
        app: api-service
    toPorts:
    - ports:
      - port: "6379"
        protocol: TCP

---

# Allow ingress from NGINX
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: allow-ingress-nginx
  namespace: microservices-demo
spec:
  endpointSelector:
    matchLabels:
      tier: frontend
  ingress:
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: ingress-nginx
        app.kubernetes.io/name: ingress-nginx

---

# Allow Prometheus to scrape metrics
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: allow-prometheus
  namespace: microservices-demo
spec:
  endpointSelector:
    matchLabels:
      app: api-service
  ingress:
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: monitoring
        app.kubernetes.io/name: prometheus
    toPorts:
    - ports:
      - port: "9090"
        protocol: TCP

---

# Allow DNS for all pods
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: allow-dns
  namespace: microservices-demo
spec:
  endpointSelector: {}
  egress:
  - toEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: kube-system
        k8s-app: kube-dns
    toPorts:
    - ports:
      - port: "53"
        protocol: UDP

---

# Allow external HTTPS for API service (for external APIs)
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: api-external-https
  namespace: microservices-demo
spec:
  endpointSelector:
    matchLabels:
      app: api-service
  egress:
  - toFQDNs:
    - matchName: "api.external-service.com"
    - matchPattern: "*.googleapis.com"
    toPorts:
    - ports:
      - port: "443"
        protocol: TCP

---
